swagger: '2.0'
info:
  description: | 
   This is our group KH-067-QA-02 demo project for testing API [prom.ua](https://rabota.ua).
   
   For this demo project you can use the api key `bearer-token` to test the API.
  version: 1.2.0
  title: Prom.ua Web OpenAPI
schemes:
  - https
host: my.prom.ua
basePath: /api/v1
# produces:
#   - application/json
tags:
  - name: Notifications
    description: (operations with notifications)
  - name: Orders
    description: (order operations)
  - name: Products
    description: (operations with products)
  - name: Clients
    description: (client operations)
  - name: Messages
    description: (operations with messages)
  - name: Groups
    description: (операции c группами)
  - name: PaymentOption
    description: (операции со способами оплат)
  - name: Delivery
    description: (операции со способами доставок)
  - name: GroupTranslation
    description: GroupTranslation
paths:
  /notifications/get_by_type:
    post:
      summary: get notificationsby type
      description: |
        Receive the list of Company's notifications by type.
      parameters:
        - name: body
          in: body
          description: Request parameters.
          schema:
            $ref: '#/definitions/Notifications'
      tags:
        - Notifications
      responses:
        '200':
          description: The list of notificationIds got by type.
          schema:
            type: object
            properties:
              processed_ids:
                type: array
                items:
                  type: integer
                  format: int64
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /orders/list:
    get:
      summary: List of the orders
      description: |
        A list of company orders with detailed information about the client, address and delivery method, added products and status.
      parameters:
        - name: status
          in: query
          description: Order status.
          required: false
          type: string
        - name: date_from
          in: query
          description: Query for orders created after the specified date. Example - "2015-04-28T12:50:34".
          required: false
          type: string
        - name: date_to
          in: query
          description: Query for orders created before the specified date. Example - "2015-04-28T12:50:34".
          required: false
          type: string
        - name: limit
          in: query
          description: Limiting quantity of orders in the response.
          required: false
          type: integer
          format: int64
        - name: last_id
          in: query
          description: Limit the selection of orders with IDs no higher than the set ones.
          required: false
          type: integer
          format: int64
      tags:
        - Orders
      responses:
        '200':
          description: List of the orders
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  $ref: '#/definitions/Order'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /orders/{id}:
    get:
      summary: Information about order
      description: |
        Information about the order with the specified ID.
      parameters:
        - name: id
          in: path
          description: The unique identifier for the order.
          required: true
          type: integer
          format: int64
      tags:
        - Orders
      responses:
        '200':
          description: Information about order
          schema:
            type: object
            properties:
              order:
                $ref: '#/definitions/Order'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /orders/set_status:
    post:
      summary: Change of official order(s).
      description: |
        Changing the status of orders according to the list of unique identifiers.
      parameters:
        - name: body
          in: body
          description: Request parameters.
          schema:
            $ref: '#/definitions/SetOrderStatus'
      tags:
        - Orders
      responses:
        '200':
          description: List of IDs of processed orders.
          schema:
            type: object
            properties:
              processed_ids:
                type: array
                items:
                  type: integer
                  format: int64
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /orders/refund:
    post:
      summary: Возврат денег покупателю
      description: |
        Изменение статуса заказов по списку уникальных идентификаторов.
      parameters:
        - name: body
          in: body
          description: Параметры запроса.
          schema:
            $ref: '#/definitions/PaymentRefund'
      tags:
        - Orders
      responses:
        '200':
          description: Список идентификаторов обработанных заказов.
          schema:
            type: object
            properties:
              processed_ids:
                type: array
                items:
                  type: integer
                  format: int64
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /messages/list:
    get:
      summary: List of company messages
      description: |
        List of company messages with full content and customer information
      parameters:
        - name: status
          in: query
          description: Message status
          required: false
          type: string
        - name: date_from
          in: query
          description: Query messages created after the specified date. Example - "2015-04-28T12:50:34".
          required: false
          type: string
        - name: date_to
          in: query
          description: Query messages created before the specified date. Example - "2015-04-28T12:50:34".
          required: false
          type: string
        - name: limit
          in: query
          description: Limiting the number of messages in a response
          required: false
          type: integer
          format: int64
        - name: last_id
          in: query
          description: Limit the selection of messages with IDs not higher than the specified one
          required: false
          type: integer
          format: int64
      tags:
        - Messages
      responses:
        '200':
          description: list of messages
          schema:
            type: object
            properties:
              messages:
                type: array
                items:
                  $ref: '#/definitions/Message'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /messages/{id}:
    get:
      summary: Information about message
      description: |
        Information about message with specified identifier
      parameters:
        - name: id
          in: path
          description: Unique message identifier
          required: true
          type: integer
          format: int64
      tags:
        - Messages
      responses:
        '200':
          description: Information about message
          schema:
            type: object
            properties:
              message:
                $ref: '#/definitions/Message'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /messages/set_status:
    post:
      summary: Change the status of the message(s)
      description: |
        Changing the status of messages according to the list of unique identifiers
      parameters:
        - name: body
          in: body
          description: Request parameters
          required: true
          schema:
            $ref: '#/definitions/SetMessageStatus'
      tags:
        - Messages
      responses:
        '200':
          description: List of IDs of processed messages
          schema:
            type: object
            properties:
              processed_ids:
                type: array
                items:
                  type: integer
                  format: int64
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /messages/reply:
    post:
      summary: Message reply
      description: |
        Sending a response to a client message with specified identifier
      parameters:
        - name: body
          in: body
          description: Request parameters
          schema:
            $ref: '#/definitions/MessageReply'
      tags:
        - Messages
      responses:
        '200':
          description: ID of the message to which was sent the reply
          schema:
            type: object
            properties:
              processed_id:
                type: integer
                format: int64
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /clients/list:
    get:
      summary: Список клиентов компании
      description: |
        Список клиентов компании с детальной информацией и контактами.
      parameters:
        - name: limit
          in: query
          description: Ограничение количества клиентов в ответе.
          required: false
          type: integer
          format: int64
        - name: last_id
          in: query
          description: Ограничить выборку клиентов с идентификаторами не выше указанного.
          required: false
          type: integer
          format: int64
        - name: search_term
          in: query
          description: Поисковый запрос (например может содержать имя, номер телефона или email).
          required: false
          type: string
      tags:
        - Clients
      responses:
        '200':
          description: Список клиентов
          schema:
            type: object
            properties:
              clients:
                type: array
                items:
                  $ref: '#/definitions/Client'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /clients/{id}:
    get:
      summary: Information about client
      description: |
        Information about the client with the specified ID
      parameters:
        - name: id
          in: path
          description: The unique identifier for the order
          required: true
          type: integer
          format: int64
      tags:
        - Clients
      responses:
        '200':
          description: Information about client
          schema:
            type: object
            properties:
              client:
                $ref: '#/definitions/Client'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products/list:
    get:
      summary: Список товаров компании
      description: |
        Список товаров компании, находящихся в определенной группе.
      tags:
        - Products
      parameters:
        - name: limit
          in: query
          description: Ограничение количества товаров в ответе.
          type: integer
        - name: last_id
          in: query
          description: Ограничить выборку товаров с идентификаторами не выше указанного.
          type: integer
        - name: group_id
          in: query
          description: Идентификатор группы. По-умолчанию - идентификатор корневой группы компании.
          type: integer
      responses:
        '200':
          description: Список товаров
          schema:
            type: object
            properties:
              group_id:
                type: integer
                description: Идентификатор отображенной группы.
              products:
                type: array
                items:
                  $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products/{id}:
    get:
      summary: Information about the product
      description: |
        Information about the product by ID
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: Unique product ID
          required: true
          type: integer
      responses:
        '200':
          description: Information about the product
          schema:
            properties:
              product:
                $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products/by_external_id/{id}:
    get:
      summary: Информация о товаре
      description: |
        Информация о товаре с указанным идентификатором в вашей системе учёта (external_id). Рекомендуем использовать URL-encoding при указании идентификатора. 
      parameters:
        - name: id
          in: path
          description: Уникальный идентификатор товара в вашей системе учёта (external_id).
          required: true
          type: string
      tags:
        - Products
      responses:
        '200':
          description: Информация о товаре
          schema:
            type: object
            properties:
              product:
                $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products/translation:
    put:
      summary: Product translation
      description: |
        Translation of the name, description and keywords of the product
      parameters:
        - name: body
          in: body
          description: Request parameters
          required: true
          schema:
            $ref: '#/definitions/ProductTranslation'
      tags:
        - Products
      responses:
        '200':
          description: Status of submitted changes
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - success
                  - error
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products/edit_by_external_id:
    post:
      summary: Редактирование товаров (по внешнему идентификатору).
      description: |
        Редактирование списка товаров (по внешнему идентификатору).
      parameters:
        - name: body
          in: body
          description: Параметры запроса.
          required: true
          schema:
            $ref: '#/definitions/ProductEditByExternalId'
      tags:
        - Products
      responses:
        '200':
          description: Список идентификаторов обработанных сообщений и ошибок.
          schema:
            type: object
            properties:
              processed_ids:
                type: array
                items:
                  type: integer
                  format: int64
              errors:
                type: object
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ProductEditError'
  /products/edit(region):
    post:
      summary: Product editing
      parameters:
        - name: body
          in: body
          description: Editing region of a product
          required: true
          # schema:
          #   $ref: '#/definitions/ProductEdit'
          schema:
           type: array
           items: 
            type: object
            properties:
              Product_Id: 
                description: Product_ID to change the  region
                type: integer
                format: int64
              ru: 
                description: New product region
                type: string
                maxLength: 50
      tags:
        - Products
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              processed_id:
                type: array
                items:
                  type: integer
                  format: int64
              errors:
                type: object
        '404':
          description: Invalid ID supplied
          schema:
            type: object
            properties:
              errors:
                type: object
        # default:
        #   description: unexpected error
        #   schema:
        #     $ref: '#/definitions/ProductEditError'
  /products/list/delete:
    delete:
      summary: Company product list
      description: |
        Deleting company product list.
      tags:
        - Products
      parameters:
        - name: limit
          in: query
          description: Limiting the number of items in the response.
          type: integer
        - name: last_id
          in: query
          description: Limit the selection of products with id not higher.
          type: integer
        - name: group_id
          in: query
          description: Group id. Default - company root group Id.
          type: integer
      responses:
        '204':
          description: No Content
          # schema:
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products/import_url:
    post:
      summary: Products import
      description: Import of products using a link to xls,csv,xlsx,xml,cml file
      parameters:
        - name: body
          in: body
          description: Request parameters
          required: true
          schema:
            $ref: '#/definitions/ImportProductURL'
      tags:
        - Products
      responses:
        '200':
          description: Process id that allows you to see the import status at different stages
          schema:
            type: object
            properties:
              id:
                type: string
              status:
                description: Import status at the stage of validation of input parameters
                type: string
                enum:
                  - success
                  - error
        default:
          description: Validation error
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
  /products/import_file:
    post:
      summary: Product import
      description: Product import by xls,csv,xlsx,xml,cml files.
      consumes:
        - ''
      parameters:
        - name: body
          in: body
          description: Request parameters
          required: true
          schema:
            $ref: '#/definitions/ImportProductWithFile'
      tags:
        - Products
      responses:
        '200':
          description: Process identificator, which permits to check the import status on the different stages
          schema:
            type: object
            properties:
              id:
                type: string
              status:
                description: Import status on the stage of valid initial parameters
                type: string
                enum:
                  - success
                  - error
        default:
          description: Validation error
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
  /products/import/status/{id}:
    get:
      summary: Import status
      description: Check of the products import status
      parameters:
        - name: id
          in: path
          description: ID import process
          required: true
          type: integer
          format: int64
      tags:
        - Products
      responses:
        '200':
          description: Import process information
          schema:
            $ref: '#/definitions/ImportProductStatus'
        default:
          description: Validation error
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
  /products/edit_name:
    put:
      summary: Edit product name
      # produces: application/json
      parameters: 
        - name: Body
          in: body
          description: Product data to edit name
          required: true
          schema:
           type: array
           items: 
            type: object
            properties:
              Product_Id: 
                description: Product_ID to change the name
                type: integer
                format: int64
              New_Name: 
                description: New product name
                type: string
                maxLength: 100
      tags:
        - Products
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: 
              processed_id: 
                type: array
                items:
                  type: integer
                  format: int64
              errors:
                type: object
        '404':
          description: Invalid ID supplied
          schema:
            type: object
            properties:
              errors:
                type: object
  /products/delete:
    delete:
      summary: Delete a product by ID
      operationId: DeleteProductByID
      # produces: application/json
      parameters:
        - name: Product_ID
          in: query
          description: Product ID to delete
          required: true
          type: integer
          format: int64
      tags:
        - Products
      responses:
        '200':
          description: OK
          schema: 
              type: object
              properties:
                processed_id:
                  type: object
                  items: 
                    type: integer
                    format: int64
                status:
                  type: string
                errors:
                  type: object
        '404':
          description: Invalid ID supplied
          schema: 
              type: object
              properties: 
                errors: 
                  type: object
  /groups/list:
    get:
      summary: List of company groups
      description: |
        List of company groups
      parameters:
        - name: limit
          in: query
          description: Limiting the number of groups in response
          required: false
          type: integer
          format: int64
        - name: last_id
          in: query
          description: Restrict the selection of groups with ID not higher than the specified one
          required: false
          type: integer
          format: int64
      tags:
        - Groups
      responses:
        '200':
          description: List of groups
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: '#/definitions/Group'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /groups/{id}:
    get:
      summary: Information about group
      description: |
       Information about group by ID.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Groups
      responses:
        '200':
          description: information about group
          schema:
            type: object
            properties:
              order:
                $ref: '#/definitions/Group'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
  /groups/delete/{id}:
    delete:
      summary: Deleting group
      description: |
        Deleting group by ID.
      parameters:
        - name: id
          in: path
          description: Unknown.
          required: true
          type: integer
          format: int64
      tags:
        - Groups
      responses:
        '200':
          description: Successfully deleted
          schema:
            $ref: '#/definitions/Group'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'  
  /payment_options/list:
    get:
      summary: Список способов оплаты компании.
      description: |
        Список способов оплаты компании.
      parameters: []
      tags:
        - PaymentOption
      responses:
        '200':
          description: Список способов оплаты
          schema:
            type: object
            properties:
              payment_options:
                type: array
                items:
                  $ref: '#/definitions/PaymentOption'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /delivery/save_declaration_id:
    post:
      summary: Сохранение номера декларации
      description: Сохранение номера декларации сгенерированного не через кабинет prom.ua
      parameters:
        - name: body
          in: body
          description: Параметры запроса.
          required: true
          schema:
            $ref: '#/definitions/DeliverySaveCreatedDeclarationIdParameters'
      tags:
        - Delivery
      responses:
        '200':
          description: Результат успешного сохранения номера декларации
          schema:
            type: object
            properties:
              status:
                description: Статус сохранения номера декларации
                type: string
                enum:
                  - success
                example: success
        default:
          description: Результат неуспешного сохранения номера декларации
          schema:
            type: object
            properties:
              status:
                description: Статус сохранения номера декларации
                type: string
                enum:
                  - error
                example: error
              message:
                description: Текст ошибки сохранения номера декларации
                type: string
                example: Ошибка валидации
              errors:
                description: Ошибки валидации. errors есть в ответе при ошибках валидации
                type: object
                example:
                  declaration_id: Номер декларации должен состоять из цифр
  /groups/translation/{id}:
    get:
      summary: Translation of the group
      description: Information about translation of the group
      parameters:
        - name: id
          in: path
          description: Group id
          required: true
          type: string
        - name: lang
          in: query
          description: Target language
          required: false
          type: string
      tags:
        - GroupTranslation
      responses:
        '200':
          description: Successful operation
          schema:
            # type: application/json
            # properties:
            #   orders:
            #     type: object
            #     items: 
                  $ref: '#/definitions/GroupTranslation'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/GroupTranslationError'
definitions:
  Notifications:
    properties:
      notificationId:
        type: integer
        description: Unique notification id.
      status:
        type: string
        description: Types of notifications. 
        example: importing, eshop, portal_moderation, exporting

  Order:
    properties:
      id:
        type: integer
        description: The unique identifier for the order
      date_created:
        type: string
        description: The date the order was created in ISO-8601 format. Example - "2015-04-28T12:50:34.588791+00:00"
      date_modified:
        type: string
        description: The date the order was updated in ISO-8601 format. Example - "2015-04-28T12:50:34.588791+00:00"
      client_first_name:
        type: string
        description: Name of the customer
      client_second_name:
        type: string
        description: Middle name of the customer
      client_last_name:
        type: string
        description: Last name of the customer
      client_id:
        type: integer
        description: The unique identifier for the customer
        example: 12345
      email:
        type: string
        description: E-mail of the customer
      phone:
        type: string
        description: Сustomer phone number
      delivery_option:
        type: object
        properties:
          id:
            type: integer
            description: Unique shipping method identifier
          name:
            type: string
            description: The name of the shipping method
          shipping_service:
            type: string
            description: Shipping service
      delivery_address:
        type: string
        description: Delivery address
      delivery_provider_data:
        type: object
        description: Delivery provider data associated with the order. If a delivery method is selected in the order that is not included in the list of supported ones (see the 'provider' field below), the object will be null
        properties:
          provider:
            type: string
            enum:
              - nova_poshta
              - justin
              - delivery_auto
              - ukrposhta
            description: Delivery provider ID
          type:
            type: string
            enum:
              - W2W
              - W2D
              - D2W
              - D2D
            description: Identifier of the type of delivery, where the letter W is a department, D is a courier. Accordingly, W2D - sending from the office, receiving by courier.
          sender_warehouse_id:
            type: string
            description: Identifier of the receiving department in the system of the delivery provider (U Ukrposhta - department index). null if the delivery is not to a branch
          recipient_warehouse_id:
            type: string
            description: Identifier of the receiving department in the system of the delivery provider (U Ukrposhta - department index). null if the delivery is not to a branch
          declaration_number:
            type: string
            description: Invoice number in the delivery provider's system
      delivery_cost:
        type: integer
        description: Cost of delivery
      payment_option:
        type: object
        properties:
          id:
            type: integer
            description: The unique identifier for the payment method
          name:
            type: string
            description: The name of the payment method
      payment_data:
        type: object
        properties:
          type:
            type: string
            description: Payment method
            enum:
              - evopay
          status:
            type: string
            description: |-
              Статус оплаты: 
              * `paid` - paid by the buyer
              * `unpaid` - not paid
              * `refunded` - refunded to the buyer
              * `paid_out` - paid to the seller
            enum:
              - paid
              - unpaid
              - refunded
              - paid_out
          status_modified:
            type: string
            description: The date the payment status was last changed, in ISO-8601 format. Example - "2015-04-28T12:50:34.588791+00:00"
      price:
        type: string
        description: Order price
      full_price:
        type: string
        description: The total cost of the order
      client_notes:
        type: string
        description: User-added comment
      products:
        # type: array
        # items:
        #   type: object
          properties:
            id:
              type: integer
              description: The unique identifier of the item
            external_id:
              type: string
              description: The unique (external system) identifier of the item
            name:
              type: string
              description: Product Name
            name_multilang:
              type: object
              properties:
                ru:
                  type: string
                uk:
                  type: string
            sku:
              type: string
              description: Product code (article)
            price:
              type: string
              description: Item price per unit
            quantity:
              type: number
              format: float
              description: The number of items in the order
            measure_unit:
              type: string
              description: Unit of measurement
            image:
              type: string
              description: Link to image
            url:
              type: string
              description: Link to the product on the company's website
            total_price:
              type: string
              description: Order price
            cpa_commission:
              properties:
                amount:
                  type: string
      status:
        type: string
        description: Order status
        enum:
          - pending
          - received
          - delivered
          - canceled
          - draft
          - paid
      status_name:
        type: string
        description: Order status
        enum:
          - новый
          - принят
          - исполнен
          - отменен
          - оплачен
      source:
        type: string
        description: Order source
        enum:
          - portal
          - company_site
          - company_cabinet
          - mobile_app
          - bigl
  SetOrderStatus:
    properties:
      status:
        description: Order status
        type: string
        enum:
          - pending
          - received
          - delivered
          - canceled
          - draft
          - paid
      ids:
        description: List of unique identifiers
        type: array
        items:
          type: integer
          format: int64
      cancellation_reason:
        description: Reason for canceling the order (Only for "canceled" status)
        type: string
        enum:
          - not_available
          - price_changed
          - buyers_request
          - not_enough_fields
          - duplicate
          - invalid_phone_number
          - less_than_minimal_price
          - another
      cancellation_text:
        description: Message for the reason for canceling the order (Only for "canceled" status). Mandatory if "cancellation_reason" is "price_changed", "not_enough_fields", or "another"
        type: string
  Message:
    properties:
      id:
        type: integer
        description: The unique ID of the message
      date_created:
        type: string
        description: The date the message was created in ISO-8601 format. Example - "2015-04-28T12:50:34.588791+00:00"
      subject:
        type: string
        description: Message subject
      message:
        type: string
        description: Message text
      client_full_name:
        type: string
        description: Name of the client
      status:
        type: string
        description: Message status
        enum:
          - unread
          - read
          - deleted
      phone:
        type: string
        description: Client phone
      product_id:
        type: integer
        description: The unique identifier of the item
  Client:
    properties:
      id:
        type: integer
        description: Уникальный идентификатор клиента.
      client_full_name:
        type: string
        description: ФИО клиента.
      phones:
        description: Список телефонов клиента.
        type: array
        items:
          type: string
      emails:
        description: Список email-ов клиента.
        type: array
        items:
          type: string
      comment:
        type: string
        description: Примечание о клиенте.
      skype:
        type: string
        description: Skype клиента.
      orders_count:
        type: integer
      total_payout:
        type: string
        description: Сумма всех заказов клиента.
  Product:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Уникальный идентификатор товара.
        example: 660913934
      external_id:
        type: string
        description: Уникальный идентификатор (внешней системы) товара.
        example: null
      name:
        type: string
        description: Название товара.
        example: Вечернее платье
      sku:
        type: string
        description: Артикул товара.
        example: AA7775
      keywords:
        type: string
        description: Ключевые слова товара.
        example: Платье, коктейльное платье
      description:
        description: Описание товара.
        type: string
        example: Коктейльное платье или платье-коктейль — укороченное женское платье для торжественных случаев без воротника и рукавов.
      selling_type:
        description: Тип товара.
        type: string
        enum:
          - retail
          - wholesale
          - universal
          - service
        example: universal
      presence:
        type: string
        description: Наличие товара.
        enum:
          - available
          - not_available
          - order
          - service
          - waiting
        example: available
      presence_sure:
        type: boolean
        enum:
          - false
          - true
        description: Статус «Гарантия наличия».
      price:
        type: number
        format: float
        description: Цена товара.
        example: 150
      minimum_order_quantity:
        type: number
        format: float
        description: Минимальное количество товаров в заказе.
        example: null
      discount:
        description: Скидка
        type: object
        properties:
          value:
            type: number
            description: Установленное значение скидки
            example: 15
          type:
            type: string
            description: Тип скидки (абсолютное значение/процент)
            enum:
              - amount
              - percent
            example: percent
          date_start:
            type: string
            description: Дата начала периода скидок
            example: 22.03.2018
          date_end:
            type: string
            description: Дата окончания периода скидок
            example: 22.04.2018
      currency:
        type: string
        description: Валюта товара.
        example: USD
      group:
        type: object
        properties:
          id:
            type: integer
            description: Идентификатор товарной группы.
            example: 2366571
          name:
            type: string
            description: Название товарной группы.
            example: Корневая группа
      category:
        type: object
        properties:
          id:
            type: integer
            description: идентификатор категории
            example: 35402
          caption:
            type: string
            description: название категории
            example: платья женские
      prices:
        description: Сетка оптовых цен.
        type: array
        items:
          type: object
          properties:
            price:
              type: number
              format: float
              description: Цена за товар при покупке свыше указанного количества.
              example: 100.75
            minimum_order_quantity:
              type: number
              format: float
              description: Минимальное количество единиц товара для указанной цены.
              example: 10
      main_image:
        type: string
        description: Ссылка на главное изображение товара.
        example: https://my.example.com/media/images/1075345153_w200_h200_dress.jpg
      images:
        type: array
        description: Дополнительные изображения товара.
        items:
          type: object
          properties:
            url:
              type: string
              example: https://my.example.com/media/images/1075345152_w200_h200_dress_front.png
            thumbnail_url:
              type: string
              example: https://my.example.com/media/images/1075345152_w100_h100_dress_front.png
            id:
              type: integer
              example: 1075345152
      status:
        type: string
        description: Статус товара.
        enum:
          - on_display
          - draft
          - deleted
          - not_on_display
          - editing_required
          - approval_pending
          - deleted_by_moderator
        example: on_display
  Group:
    properties:
      id:
        type: integer
        description: Unique group ID
      name:
        type: string
        description: Group name
      description:
        type: string
        description: Group description
      image:
        type: string
        description: Link to group image
      parent_group_id:
        type: integer
        description: Parent group ID
  PaymentOption:
    properties:
      id:
        type: integer
        description: Уникальный идентификатор способа оплаты.
      name:
        type: string
        description: Название способа оплаты.
      description:
        type: string
        description: Описание способа оплаты.
  ProductTranslation:
    properties:
        product_id:
          description: Unique product identifier
          type: integer
          format: int64
        lang:
          description: Translation language ("uk")
          type: string
        name:
          description: Translated product name
          type: string
        keywords:
          description: Translated product keewords
          type: string
        description:
          description: Translated product description
          type: string
  ProductEditByExternalId:
    type: array
    items:
      type: object
      required:
        - id
      properties:
        id:
          description: Уникальный идентификатор товара в вашей системе учёта товаров (external_id).
          type: string
        presence:
          description: Наличие товара.
          type: string
          enum:
            - available
            - not_available
            - order
            - waiting
        presence_sure:
          description: Статус «Гарантия наличия».
          type: boolean
        price:
          description: Цена товара.
          type: number
          format: float
          minimum: 0.00001
        status:
          description: Статус сообщения.
          type: string
          enum:
            - on_display
            - draft
            - deleted
            - not_on_display
        prices:
          description: Сетка оптовых цен.
          type: array
          items:
            type: object
            properties:
              price:
                type: number
                format: float
              minimum_order_quantity:
                type: number
                format: float
        discount:
          description: Скидка
          type: object
          properties:
            value:
              type: number
              description: Установленное значение скидки
            type:
              type: string
              description: Тип скидки (абсолютное значение/процент)
              enum:
                - amount
                - percent
            date_start:
              type: string
              description: Дата начала периода скидок в формате ДД.ММ.ГГГГ
            date_end:
              type: string
              description: Дата окончания периода скидок ДД.ММ.ГГГГ
        name:
          description: Название товара.
          type: string
          maxLength: 150
        keywords:
          description: Строка ключевых слов (разделитель запятая пробел ', ').
          type: string
          maxLength: 1024
        description:
          description: Описание товара (может содержать html теги).
          type: string
          maxLength: 50000
        quantity_in_stock:
          description: Остаток продукта на складе (Отключен для разновидностей, которые наследуют наличие)
          type: integer
          format: int64
  MessageReply:
    properties:
      id:
        description: Message identifier
        type: integer
        format: int64
      message:
        description: Message text
        type: string
        maxLength: 1000
  SetMessageStatus:
    properties:
      status:
        description: Message status
        type: string
        enum:
          - unread
          - read
          - deleted
      ids:
        description: List of unique identifiers
        type: array
        items:
          type: integer
          format: int64
  PaymentRefund:
    properties:
      ids:
        description: Список уникальных идентификаторов.
        type: array
        items:
          type: integer
          format: int64
  ImportProductURL:
    required:
      - url
    properties:
      url:
        description: Ссылка на xls,csv,xlsx,xml,cml документ
        type: string
        maxLength: 1024
      force_update:
        description: Обновить принудительно
        type: boolean
      only_available:
        description: Импорт только товаров в статусах «В наличии» и «Под заказ».
        type: boolean
        default: false
      mark_missing_product_as:
        description: Помечать отсутствующие продукты следующим статусом
        type: string
        enum:
          - none
          - not_available
          - not_on_display
          - deleted
        default: none
      updated_fields:
        type: array
        items:
          description: Список полей, которые необходимо обновить
          type: string
          enum:
            - name
            - sku
            - price
            - images_urls
            - presence
            - quantity_in_stock
            - description
            - group
            - keywords
            - attributes
            - discount
            - labels
            - gtin
            - mpn
          default:
            - price
            - presence
  ImportProductWithFile:
    properties:
      file:
        description: xls,csv,xlsx,xml,cml документ
        type: string
        format: binary
      data:
        description: Настройки для импорта (JSON формат).
        type: object
        properties:
          force_update:
            description: Обновить принудительно
            type: boolean
            default: false
          only_available:
            description: Импорт только товаров в статусах «В наличии» и «Под заказ».
            type: boolean
            default: false
          mark_missing_product_as:
            description: Помечать отсутствующие продукты следующим статусом
            type: string
            enum:
              - none
              - not_available
              - not_on_display
              - deleted
            default: none
          updated_fields:
            type: array
            items:
              description: Список полей, которые необходимо обновить
              type: string
              enum:
                - name
                - sku
                - price
                - images_urls
                - presence
                - quantity_in_stock
                - description
                - group
                - keywords
                - attributes
                - discount
                - labels
                - gtin
                - mpn
              default:
                - price
                - presence
  DeliverySaveCreatedDeclarationIdParameters:
    properties:
      order_id:
        description: Номер заказа
        type: integer
        format: int64
        example: 103920887
      declaration_id:
        description: Номер декларации провайдера доставки
        type: string
        example: '20450268096789'
      delivery_type:
        description: Тип доставки
        type: string
        enum:
          - nova_poshta
        example: nova_poshta
  ImportProductStatus:
    properties:
      status:
        description: Статус импорта
        type: string
        enum:
          - SUCCESS
          - PARTIAL
          - FATAL
      not_changed:
        description: Количество позиций, оставшихся без изменения
        type: integer
      updated:
        description: Количество обновленных позиций
        type: integer
      not_in_fle:
        description: Количество позиций, которых нет в файле импорта
        type: integer
      imported:
        description: Количество импортрованных позиций
        type: integer
      created:
        description: Количество созданных позиций
        type: integer
      actualized:
        description: Количество актуализированных позиций
        type: integer
      created_active:
        description: Создано активных позиций
        type: integer
      created_hidden:
        description: Создано скрытых позиций
        type: integer
      total:
        description: Всего загружено позиций
        type: integer
      with_errors_count:
        description: Всего позиций с ошибками
        type: integer
      errors:
        description: Список ошибок
        type: array
        items:
          type: object
          properties:
            download:
              description: Ошибки на этапе загрузки файла
              type: object
            store_file:
              description: Ошибки на этапе сохранения файла
              type: object
            validation:
              description: Ошибки на этапе валидации позиций файла
              type: object
            import:
              description: Ошибки на этапе импорта позиций
              type: object
            download_images:
              description: Ошибки на этапе загрузки изображений
              type: object
  Error:
    properties:
      error:
        description: An error occurred while executing the request.
        type: string
  ProductEditError:
    properties:
      errors:
        description: Ошибки с указанием id товара, для которого не удалось выполнить запрос.
        type: object
      processed_ids:
        type: array
        items:
          type: integer
          format: int64
  GroupTranslation:
    # required: 
    #   name: true
    #   photoUrls: true
    properties:
      name:
        type: string
        example: string
      photoUrls:
        type: string
        example: string
  GroupTranslationError:
    properties:
      error:
        type: string
        example: Unexpected error message
securityDefinitions:
  Bearer:
    type: apiKey
    description: Get JWT token from Auth API and paste it
    name: Authorization
    in: header
